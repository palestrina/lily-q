Based on my fresh install of vanilla Debian, hopefully you should only need to install a couple of things. 

LUA 5.3
Most of LilyQuick is written in Lua 5.3. It includes Lua 5.3.4 statically to avoid versioning problems. My Debian installation needed libreadline-dev to install Lua. If this is missing, type:

> sudo apt-get libreadline-dev

Then make and make install. More information at http://www.lua.org/manual/5.3/readme.html

ALSA
You probably have Alsa installed, but you need the development library:

> sudo apt-get libasound2-dev

COMPILING
Then (unless I’ve forgotten something), in a terminal, navigate to the directory this file is in. Type:

> make

The make install script adds an alias to LilyQuick for your convenience. The alias includes sudo which is why it asks for your password. Sudo is necessary as intercepting keystrokes requires superuser privileges.

> make install

Make may fail if GCC is not installed:

> sudo install gcc

should fix this.

RUNNING
Open a new terminal window (as the new alias won’t be picked up by your current window) and type:

> lq

to run LilyQuick (and type your password for sudo which is in the alias).

COMPUTER KEYBOARD
If compilation was successful, you should have an executable file called lq in this directory.
Now open the file LQconfig.lua for editing. For LilyQuick to find your computer keyboard you need to give it a file name. In Debian, it can be found in a directory called /dev/input/by-id. Here’s what I see.

> cd /dev/input/by-id
/dev/input/by-id$ ls

usb-Apple__Inc_Apple_Keyboard-event-if01
usb-Apple__Inc_Apple_Keyboard-event-kbd
usb-Logitech_USB-PS_2_Optical_Mouse-event-mouse
usb-Logitech_USB-PS_2_Optical_Mouse-mouse

From this I can put:
deviceName = "/dev/input/by-id/usb-Apple__Inc_Apple_Keyboard-event-kbd"

into LQconfig.lua.

MIDI KEYBOARD
LilyQuick will attempt to connect to your MIDI keyboard. It just needs to be able to identify it uniquely. In the terminal type:

> amidi -l
Dir Device    Name
I   hw:2,0,0  KeyStudio MIDI 1

The device ID can potentially change, so LilyQuick works out the device ID from the name. So my LQconfig.lua file says:

MIDIKeyboardName = "KeyStudio MIDI"

RUNNING QSYNTH OR FLUIDSYNTH
For convenience, LilyQuick will attempt to start a synthesizer when it starts, then connect to it. The file Linux.lua does a couple of Linux-specific things, and defines the command that LilyQuick will use to run the synthesizer. Replace yourusername with your username in this line:

local OpenSynthCommand = [[su -c "qsynth --midi-driver=alsa_seq &" yourusername]]

to run Qsynth as yourself rather than as root. Of course, you may wish to run Fluidsynth directly. LilyQuick needs Qsynth to use the alsa_seq MIDI driver. Unfortunately when you open Qsynth this way, the MIDI driver will remain on alsa_seq. If you normally use a different driver, in the Gnome desktop environment you can edit the file:

/usr/share/applications/qsynth.desktop

> sudo nano /usr/share/applications/qsynth.desktop

Change the Exec= line to

Exec=/usr/bin/qsynth --midi-driver=oss

or whichever MIDI driver you normally use. Then when you open Qsynth with the GUI, it will use the correct MIDI driver.

TROUBLESHOOTING

If output does not appear in a terminal/editor/lilypond check that X11 has the
permissions to read the new device created /dev/input/event?? (see Xorg.0.log)
Copy the included rules file to /etc/udev/rules.d/ as a fix. (exposes terminal content to all users!)

lq is very picky about sharing the midi device.  Check for conflict with frescobali midi inputs and with jack.
Running qsynth through pulseaudio is easier.  Try disabling automatic qsynth startup in Linux.lua

 LinuxOpenSynth = function()
 end

and then starting qsynth manually or using an alternative sound engine.

lq tries to make the connection for a few seconds, but if you are too slow you will need to connect the input manually:
For example
aconnect -i -o
...
...
client 128: 'Client-128' [type=user,pid=606993]
    0 'Virtual RawMIDI '
client 129: 'FLUID Synth (qsynth)' [type=user,pid=607002]
    0 'Synth input port (qsynth:0)'

aconnect 128 129

qsynth may be silent on channels higher than 1 (bug in qsynth?). Setting in LQconfig.lua
Alternatively use fluidsynth from the command line in another terminal.

fluidsynth -a pulseaudio -m alsa_seq -g2 /path/to/soundfont.sf2




